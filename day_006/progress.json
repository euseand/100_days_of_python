{"progress":{"python":{"invalid":{},"worlds/menus/reeborg_intro_en.json":["Hurdle 1","Hurdle 2","Hurdle 3","Hurdle 4","Maze"]}},"solutions":{"python":{"worlds/menus/reeborg_intro_en.json":{"Hurdle 1":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_many(num):\n    for _ in range(num):\n        move()\n\ndef jump():\n    move()\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\ndef jump_many(num):\n    for _ in range(num):\n        jump()\n\njump_many(5)\njump()\n################################################################\n# WARNING: Do not change this comment.\n# Library Code is below.\n################################################################\n","Hurdle 2":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_many(num):\n    for _ in range(num):\n        move()\n\ndef jump():\n    move()\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\ndef jump_many():\n     while not at_goal():\n         jump()\n        \njump_many()\n################################################################\n# WARNING: Do not change this comment.\n# Library Code is below.\n################################################################\n","Hurdle 3":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_many(num):\n    for _ in range(num):\n        move()\n\ndef jump():\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\ndef go():\n     while not at_goal():\n         if not wall_in_front():\n            move()\n         else:\n            jump()\n     \ngo()\n################################################################\n# WARNING: Do not change this comment.\n# Library Code is below.\n################################################################\n","Hurdle 4":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_many(num):\n    for _ in range(num):\n        move()\n\ndef jump():\n    turn_left()\n    while wall_on_right():\n        move()\n    turn_right()\n    move()\n    turn_right()\n    while front_is_clear():\n        move()\n    turn_left()\n\ndef go():\n     while not at_goal():\n         if not wall_in_front():\n            move()\n         else:\n            jump()\n     \ngo()\n################################################################\n# WARNING: Do not change this comment.\n# Library Code is below.\n################################################################\n","Maze":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_many(num):\n    for _ in range(num):\n        move()\n\ndef jump():\n    turn_left()\n    while wall_on_right():\n        move()\n    turn_right()\n    move()\n    turn_right()\n    while front_is_clear():\n        move()\n    turn_left()\n\ndef go():\n     while not at_goal():\n         if right_is_clear():\n            turn_right()\n            move()\n         elif front_is_clear():\n            move()\n         else:\n            turn_left()\ngo()\n################################################################\n# WARNING: Do not change this comment.\n# Library Code is below.\n################################################################\n"}}}}